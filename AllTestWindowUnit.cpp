//---------------------------------------------------------------------------

#include <fmx.h>
#pragma hdrstop

#include "AllTestWindowUnit.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.fmx"
#pragma resource ("*.Windows.fmx", _PLAT_MSWINDOWS)

TAllTestForm *AllTestForm;
//---------------------------------------------------------------------------
__fastcall TAllTestForm::TAllTestForm(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TAllTestForm::CloseButtonClick(TObject *Sender)
{
	Close();

	int i;
	for (i = 0; i < 240; i++) {
		 StringGrid1->Cells[0][i]="";
		 StringGrid1->Cells[1][i]="";
		 StringGrid1->Cells[2][i]="";
	}
    Label3->Text="0";
	Label4->Text="0";
	Timer1->Enabled=false;
}
//---------------------------------------------------------------------------

void __fastcall TAllTestForm::StartButtonClick(TObject *Sender)
{
    Label3->Text="0";
	Label4->Text="0";
	Timer1->Enabled=true;

	int i,j=1;
	for (i = 5; i < 240; i+=6) {
		  StringGrid1->Cells[0][i]="------------------------------------------------------";
		  StringGrid1->Cells[1][i]="----------------------------------------------------------------------------------";
		  StringGrid1->Cells[2][i]="--------------------------";
		  StringGrid1->Cells[2][i-1]="--------------------------";
		  StringGrid1->Cells[2][i-2]="--------------------------";
		  StringGrid1->Cells[2][i-3]="--------------------------";
		  StringGrid1->Cells[2][i-4]="--------------------------";
	}

	for (i = 0; i < 60; i+=6) {
		StringGrid1->Cells[0][i]=IntToStr(j)+". Укажите варианты ответов, в которых";
		StringGrid1->Cells[0][i+1]="во всех словах одного ряда пропущена одна и ";
		StringGrid1->Cells[0][i+2]="та же буква. Запишите номера ответов.";
		j++;
	}

	for (i = 60; i < 120; i+=6) {
		StringGrid1->Cells[0][i]=IntToStr(j)+". В одном из приведённых ниже слов";
		StringGrid1->Cells[0][i+1]="допущена ошибка в постановке ударения:";
		StringGrid1->Cells[0][i+2]="НЕВЕРНО выделена буква, обозначающая ";
		StringGrid1->Cells[0][i+3]="ударный гласный звук. Выпишите это слово.";
		j++;
	}

	for (i = 120; i < 144; i+=6) {
		StringGrid1->Cells[0][i]=IntToStr(j)+". Укажите варианты ответов, в которых";
		StringGrid1->Cells[0][i+1]="во всех словах одного ряда ";
		StringGrid1->Cells[0][i+2]="содержится безударная чередующаяся ";
		StringGrid1->Cells[0][i+3]="гласная корня. Запишите номера ответов.";
		j++;
	}

	for (i = 144; i < 162; i+=6) {
		StringGrid1->Cells[0][i]=IntToStr(j)+". Укажите варианты ответов, в которых";
		StringGrid1->Cells[0][i+1]="во всех словах одного ряда ";
		StringGrid1->Cells[0][i+2]="содержится безударная проверяемая ";
		StringGrid1->Cells[0][i+3]="гласная корня. Запишите номера ответов.";
		j++;
	}

	for (i = 162; i < 180; i+=6) {
		StringGrid1->Cells[0][i]=IntToStr(j)+". Укажите варианты ответов, в которых";
		StringGrid1->Cells[0][i+1]="во всех словах одного ряда ";
		StringGrid1->Cells[0][i+2]="содержится безударная непроверяемая ";
		StringGrid1->Cells[0][i+3]="гласная корня. Запишите номера ответов.";
		j++;
	}

	for (i = 180; i < 240; i+=6) {
		StringGrid1->Cells[0][i]=IntToStr(j)+". Укажите варианты ответов, в которых";
		StringGrid1->Cells[0][i+1]="во всех словах одного ряда пропущена одна и ";
		StringGrid1->Cells[0][i+2]="та же буква. Запишите номера ответов.";
		j++;
	}

	StringGrid1->Cells[1][0]="1) устра..вать, бараш..к";     //1
	StringGrid1->Cells[1][1]="2) приукраш..вать, письм..цо";
	StringGrid1->Cells[1][2]="3) догадл..вость, крас..вый";
	StringGrid1->Cells[1][3]="4) въедл..вый, подбадр..вать";
	StringGrid1->Cells[1][4]="5) подразум..вающий, луж..ца";

	StringGrid1->Cells[1][6]="1) потреб..вать, выклад..вать";   //2
	StringGrid1->Cells[1][7]="2) преусп..вать, эмал..вый";
	StringGrid1->Cells[1][8]="3) раскрепощ..нность, ноч..вка";
	StringGrid1->Cells[1][9]="4) (хрустальный) графинч..к, пружин..стое кресло";
	StringGrid1->Cells[1][10]="5) изворотл..вый (торговец), выздоравл..вая";

	StringGrid1->Cells[1][12]="1) удва..вать, лестн..чка";               //3
	StringGrid1->Cells[1][13]="2) груш..вый, нищ..та";
	StringGrid1->Cells[1][14]="3) обид..лся, мотылёч..к";
	StringGrid1->Cells[1][15]="4) локт..вой, прям..та";
	StringGrid1->Cells[1][16]="5) фланел..вый, заносч..вый";

	StringGrid1->Cells[1][18]="1) усидч..вый, переменч..вый";           //4
	StringGrid1->Cells[1][19]="2) отстёг..вавший, глянц..вый";
	StringGrid1->Cells[1][20]="3) щегол..ватый, находч..вый";
	StringGrid1->Cells[1][21]="4) прислуш..ваться, гор..вать";
	StringGrid1->Cells[1][22]="5) заносч..вый, отапл..ваемый";

	StringGrid1->Cells[1][24]="1) ткан..вый, отчётл..во";                //5
	StringGrid1->Cells[1][25]="2) застр..вание, сол..вой";
	StringGrid1->Cells[1][26]="3) трав..нистый, им..нной (билет)";
	StringGrid1->Cells[1][27]="4) навед..ваться, аплодир..вали";
	StringGrid1->Cells[1][28]="5) камыш..вый, нож..вка";

	StringGrid1->Cells[1][30]="1) находч..во, разве..ть";             //6
	StringGrid1->Cells[1][31]="2) достра..вать, кле..вший";
	StringGrid1->Cells[1][32]="3) никел..вый, реша..мый";
	StringGrid1->Cells[1][33]="4) наде..лся, дешёв..нький";
	StringGrid1->Cells[1][34]="5) винов..н, талантл..вый";

	StringGrid1->Cells[1][36]="1) звоноч..к, ослаб..вать";
	StringGrid1->Cells[1][37]="2) щетин..стая (борода), заноч..вавший";            //7
	StringGrid1->Cells[1][38]="3) предприимч..вый, раска..ваться";
	StringGrid1->Cells[1][39]="4) образц..вое (поведение), горяч.. (спорить)";
	StringGrid1->Cells[1][40]="5) натри..вый, удушл..вый (запах)";

	StringGrid1->Cells[1][42]="1) удоста..вать, масл..це";            //8
	StringGrid1->Cells[1][43]="2) отво..вав, плать..це";
	StringGrid1->Cells[1][44]="3) локт..вой, ключ..к";
	StringGrid1->Cells[1][45]="4) угр..ватый, досто..н";
	StringGrid1->Cells[1][46]="5) дешев..нький, баш..нка";

	StringGrid1->Cells[1][48]="1) фланел..вый, красн..ватый";
	StringGrid1->Cells[1][49]="2) овлад..вая, крупитч..тый";   //9
	StringGrid1->Cells[1][50]="3) хитр..нький, восьм..ричный";
	StringGrid1->Cells[1][51]="4) затм..вающий, со..вый";
	StringGrid1->Cells[1][52]="5) удва..вавший, податл..вый";

	StringGrid1->Cells[1][54]="1) вышаг..вая, нищ..та";
	StringGrid1->Cells[1][55]="2) эмал..вый, зно..н";      //10
	StringGrid1->Cells[1][56]="3) насмешл..вый, лен..вый";
	StringGrid1->Cells[1][57]="4) накрахмал..вший, врем..чко";
	StringGrid1->Cells[1][58]="5) делов..тый, пес..нка";

	StringGrid1->Cells[1][60]="врУчишь";
	StringGrid1->Cells[1][61]="крАны"; //1
	StringGrid1->Cells[1][62]="дОверху";
	StringGrid1->Cells[1][63]="налилА";
	StringGrid1->Cells[1][64]="вЕрба";

	StringGrid1->Cells[1][66]="принудИть";       //2
	StringGrid1->Cells[1][67]="углубИть";
	StringGrid1->Cells[1][68]="еретИк";
	StringGrid1->Cells[1][69]="плодоносИть";
	StringGrid1->Cells[1][70]="донЕльзя";

	StringGrid1->Cells[1][72]="аэропОрты";
	StringGrid1->Cells[1][73]="Отрочество";        //3
	StringGrid1->Cells[1][74]="пОнявший";
	StringGrid1->Cells[1][75]="накренИт";
	StringGrid1->Cells[1][76]="начАвший";

	StringGrid1->Cells[1][78]="прирУченный";
	StringGrid1->Cells[1][79]="бАнты";    //4
	StringGrid1->Cells[1][80]="дефИс";
	StringGrid1->Cells[1][81]="экспЕрт";
	StringGrid1->Cells[1][82]="истЕкший";

	StringGrid1->Cells[1][84]="Иксы";            //5
	StringGrid1->Cells[1][85]="насорИт";
	StringGrid1->Cells[1][86]="крЕмень";
	StringGrid1->Cells[1][87]="нажИвший";
	StringGrid1->Cells[1][88]="диспансЕр";

	StringGrid1->Cells[1][90]="созЫв";
	StringGrid1->Cells[1][91]="Отзыв (посла)";          //6
	StringGrid1->Cells[1][92]="добелА";
	StringGrid1->Cells[1][93]="оптОвый";
	StringGrid1->Cells[1][94]="тубдиспансЕр";

	StringGrid1->Cells[1][96]="позвалА";
	StringGrid1->Cells[1][97]="принЯл";    //7
	StringGrid1->Cells[1][98]="начАв";
	StringGrid1->Cells[1][99]="тОрты";
	StringGrid1->Cells[1][100]="Отрочество";

	StringGrid1->Cells[1][102]="кОнусов";            //8
	StringGrid1->Cells[1][103]="намерЕние";
	StringGrid1->Cells[1][104]="чЕрпать";
	StringGrid1->Cells[1][105]="недУг";
	StringGrid1->Cells[1][106]="цыгАн";

	StringGrid1->Cells[1][108]="Иконопись";
	StringGrid1->Cells[1][109]="сливОвый";            //9
	StringGrid1->Cells[1][110]="пОгнутый";
	StringGrid1->Cells[1][111]="грУшевый";
	StringGrid1->Cells[1][112]="кровоточИть";

	StringGrid1->Cells[1][114]="начАтый";
	StringGrid1->Cells[1][115]="отозвалАсь";   //10
	StringGrid1->Cells[1][116]="дОверху";
	StringGrid1->Cells[1][117]="мозаИчный";
	StringGrid1->Cells[1][118]="недУг";

	StringGrid1->Cells[1][120]="1) поплавок, склонение, озарять";
	StringGrid1->Cells[1][121]="2) заниматься, обжигающий, предложение"; //1 ,2
	StringGrid1->Cells[1][122]="3) аналогичный, потерять, разрастаться";
	StringGrid1->Cells[1][123]="4) стилизовать, забирать, касание";
	StringGrid1->Cells[1][124]="5) подскочить, отнимать, блистать";

	StringGrid1->Cells[1][126]="1) гастроном, трясти, делегат"; //2 ,5
	StringGrid1->Cells[1][127]="2) регулировать, кабинет, дисциплина";
	StringGrid1->Cells[1][128]="3) понимание, выровнять (поверхность), поросль";
	StringGrid1->Cells[1][129]="4) результат, храбрец, ослепительный";
	StringGrid1->Cells[1][130]="5) вырос, вычитать, опираться";

	StringGrid1->Cells[1][132]="1) эксперимент, преподавать, бечёвка";
	StringGrid1->Cells[1][133]="2) опираясь, вырасти, наклониться";        //3 ,8
	StringGrid1->Cells[1][134]="3) росток, угасать, бидон";
	StringGrid1->Cells[1][135]="4) соберёшь, безотлагательный, озарило";
	StringGrid1->Cells[1][136]="5) измерять, диагональ, велосипед";

	StringGrid1->Cells[1][138]="1) вырастил, выкосил (траву), пловчиха";
	StringGrid1->Cells[1][139]="2) запереть, заря, изложение";    //4  ,11
	StringGrid1->Cells[1][140]="3) выскочил, касание, поджигать";
	StringGrid1->Cells[1][141]="4) смирился, пригорюнился, творец";
	StringGrid1->Cells[1][142]="5) блистать, занесённый, выгореть";

	StringGrid1->Cells[1][144]="1) раскраснеться, подсмотреть, ходовой";            //5.1
	StringGrid1->Cells[1][145]="2) претензия, макулатура, приложение";
	StringGrid1->Cells[1][146]="3) предлагать, зарница, обмакните (перо)";
	StringGrid1->Cells[1][147]="4) примирение, замечать (детали), поласкать (собаку)";
	StringGrid1->Cells[1][148]="5) убедительно, фиолетовый, наваждение";

	StringGrid1->Cells[1][150]="1) одичать, издалека, задрожать";
	StringGrid1->Cells[1][151]="2) оплатить (заказ), оснащение, способный";          //6.6
	StringGrid1->Cells[1][152]="3) скосить (траву), полемизировать, подгорать";
	StringGrid1->Cells[1][153]="4) протереть, деревяшка, благородный";
	StringGrid1->Cells[1][154]="5) утешитель, фантастический, касательная";

	StringGrid1->Cells[1][156]="1) заклинать, реакция, полагать";
	StringGrid1->Cells[1][157]="2) профориентация, доброта, ветеран";    //7 .9
	StringGrid1->Cells[1][158]="3) загляденье, примерять (галстук), полевая (кухня)";
	StringGrid1->Cells[1][159]="4) внимательный, дипломат, президент";
	StringGrid1->Cells[1][160]="5) города, насмехаться, скрипучая";

	StringGrid1->Cells[1][162]="1) вестибюль, инженер, интеллигенция";   //8.4
	StringGrid1->Cells[1][163]="2) осквернить, винегрет, (глаза) слипались";
	StringGrid1->Cells[1][164]="3) предполагать, побледнел, вытворять";
	StringGrid1->Cells[1][165]="4) фонтан, балкон, каблук";
	StringGrid1->Cells[1][166]="5) равнина, ровесник, запивать (лекарство)";

	StringGrid1->Cells[1][168]="1) аристократ, министерство, дивизион";
	StringGrid1->Cells[1][169]="2) озаряться, просмотреть, морячок";  //9.7
	StringGrid1->Cells[1][170]="3) выскочка, деревья, выстелить";
	StringGrid1->Cells[1][171]="4) приоритет, горизонт, стратегия";
	StringGrid1->Cells[1][172]="5) расстилается, прикасаться, умиротворение";

	StringGrid1->Cells[1][174]="1) авиакомпания, импровизация, балагур";
	StringGrid1->Cells[1][175]="2) озариться, простираться, горит";   //10 .10
	StringGrid1->Cells[1][176]="3) оппонент, дискуссия, ватрушка";
	StringGrid1->Cells[1][177]="4) строжайший, приземлённый, посветил (в темноте)";
	StringGrid1->Cells[1][178]="5) сложившийся, тотальный, умалять (значение)";

	StringGrid1->Cells[1][180]="1) об..греться, пр..питанный, пр..сматривать (статью)";
	StringGrid1->Cells[1][181]="2) про..грать, с..змала, дез..нфекция"; //1
	StringGrid1->Cells[1][182]="3) ра..мешать, бе..численный, и..чезнуть";
	StringGrid1->Cells[1][183]="4) пр..старелый, пр..открыть, пр..вокзальный";
	StringGrid1->Cells[1][184]="5) нед..варить, п..краска, п..дкова";

	StringGrid1->Cells[1][186]="1) под..брать, н..дорвать, с..действие";       //2
	StringGrid1->Cells[1][187]="2) р..яный, валер..яна, л..ёт";
	StringGrid1->Cells[1][188]="3) пр..равнять, пр..брежный, пр..стегнуть";
	StringGrid1->Cells[1][189]="4) бе..характерный, ра..бросанный, ра..трёпа";
	StringGrid1->Cells[1][190]="5) нао..рез, на..кусывать, по..ставлять";

	StringGrid1->Cells[1][192]="1) пр..способь (для работы), пр..крыл, непр..хотливый";
	StringGrid1->Cells[1][193]="2) в..езд (во двор), б..ют (по щеке), помест..е";        //3
	StringGrid1->Cells[1][194]="3) сверх..нтеллигентный, по..скать, вз..мать";
	StringGrid1->Cells[1][195]="4) опр..кинуть, пр..родина, под..брать";
	StringGrid1->Cells[1][196]="5) ра..шифруй, бе..человечно, не..жатый";

	StringGrid1->Cells[1][198]="1. вд..гонку, з..копчённый, п..трескивает";
	StringGrid1->Cells[1][199]="2. под..есаул, меж..ярусный, под..язычный";    //4
	StringGrid1->Cells[1][200]="3. пр..норовиться, пр..наряженный, пр..строенный";
	StringGrid1->Cells[1][201]="4. ра..тревожить, и..бежать, ..двинуть";
	StringGrid1->Cells[1][202]="5. п..мчаться, нер..сположение, ..тпраздновать";

	StringGrid1->Cells[1][204]="1) не..хваченный (переписью), р..зместить, п..дметать";            //5
	StringGrid1->Cells[1][205]="2) раз..ёмный, под..ём, об..ект";
	StringGrid1->Cells[1][206]="3) не..жатый, бе..дорожье, бе..заботно";
	StringGrid1->Cells[1][207]="4) под..скать, сверх..нтересный, вз..мать";
	StringGrid1->Cells[1][208]="5) пр..обретатель, пр..чудливый, пр..ходящий (домой)";

	StringGrid1->Cells[1][210]="1) пр..обрёл, пр..образователь, сверх..нтересный";
	StringGrid1->Cells[1][211]="2) п..дсказывать, п..никнуть, д..ехать";          //6
	StringGrid1->Cells[1][212]="3) п..едестал, ал..тернатива, б..ются";
	StringGrid1->Cells[1][213]="4) и..древле, не..держанный, не..добровать";
	StringGrid1->Cells[1][214]="5) оп..знание, нер..створимый, п..йдём";

	StringGrid1->Cells[1][216]="1) п..иск, неп..ддающийся, от..двинуть";
	StringGrid1->Cells[1][217]="2) ра..бросать, и..пуганный, бе..вольный";    //7
	StringGrid1->Cells[1][218]="3) пр..следовать, пр..милый, пр..смыкающийся";
	StringGrid1->Cells[1][219]="4) с..еденный, сер..ёзный, ад..ютант";
	StringGrid1->Cells[1][220]="5) нап..следок, н..слаждаться, д..браться";

	StringGrid1->Cells[1][222]="1) пр..горок, пр..тихнуть, пр..норовиться";            //8
	StringGrid1->Cells[1][223]="2) бе..конечный, ра..кроить, ра..чёт";
	StringGrid1->Cells[1][224]="3) зав..южить, об..ект, под..строй";
	StringGrid1->Cells[1][225]="4) п..дбежать, пор..скрутить, д..лепить";
	StringGrid1->Cells[1][226]="5) без..сходный, двух..гольный, под..скать";

	StringGrid1->Cells[1][228]="1) пр..верить, д..йти, в..спитание";
	StringGrid1->Cells[1][229]="2) пр..интересный, пр..брежный, пр..сесть"; //9  .10
	StringGrid1->Cells[1][230]="3) в..езд, зав..южить, от..явленный";
	StringGrid1->Cells[1][231]="4) бе..тактный, в..пыхнуть, во..стать";
	StringGrid1->Cells[1][232]="5) по..делка, о..тепель, на..смотрщик";

	StringGrid1->Cells[1][234]="1) пр..образовать, пр..неприятный, пр..следовать";
	StringGrid1->Cells[1][235]="2) сверх..естественный, с..ёмка, двух..ярусный";   //10  .11
	StringGrid1->Cells[1][236]="3) п..никнуть, пр..дедушка, поз..вчера";
	StringGrid1->Cells[1][237]="4) чере..чур, и..синя-чёрный, бе..крайний";
	StringGrid1->Cells[1][238]="5) вз..скать, без..нициативный, сверх..зысканный";

}
//---------------------------------------------------------------------------

void __fastcall TAllTestForm::CheckButtonClick(TObject *Sender)
{
    StringColumn3->ReadOnly=true;
	Button1->Enabled=true;
    Timer1->Enabled=false;

	int s=0;

	if (StringGrid1->Cells[2][0]=="34") {
		s++;
		StringGrid1->Cells[2][1]="ВЕРНО";
	}
	else StringGrid1->Cells[2][1]="НЕВЕРНО";

	if (StringGrid1->Cells[2][6]=="2345") {
		s++;
		StringGrid1->Cells[2][7]="ВЕРНО";
	}
	else StringGrid1->Cells[2][7]="НЕВЕРНО";

	if (StringGrid1->Cells[2][12]=="123") {
		s++;
		StringGrid1->Cells[2][13]="ВЕРНО";
	}
	else StringGrid1->Cells[2][13]="НЕВЕРНО";

	if (StringGrid1->Cells[2][18]=="15") {
		s++;
		StringGrid1->Cells[2][19]="ВЕРНО";
	}
	else StringGrid1->Cells[2][19]="НЕВЕРНО";

	if (StringGrid1->Cells[2][24]=="25") {
		s++;
		StringGrid1->Cells[2][25]="ВЕРНО";
	}
	else StringGrid1->Cells[2][25]="НЕВЕРНО";

	if (StringGrid1->Cells[2][30]=="23") {
		s++;
		StringGrid1->Cells[2][31]="ВЕРНО";
	}
	else StringGrid1->Cells[2][31]="НЕВЕРНО";

	if (StringGrid1->Cells[2][36]=="134") {
		s++;
		StringGrid1->Cells[2][37]="ВЕРНО";
	}
	else StringGrid1->Cells[2][37]="НЕВЕРНО";

	if (StringGrid1->Cells[2][42]=="15") {
		s++;
		StringGrid1->Cells[2][43]="ВЕРНО";
	}
	else StringGrid1->Cells[2][43]="НЕВЕРНО";

	if (StringGrid1->Cells[2][48]=="345") {
		s++;
		StringGrid1->Cells[2][49]="ВЕРНО";
	}
	else StringGrid1->Cells[2][49]="НЕВЕРНО";

	if (StringGrid1->Cells[2][54]=="23") {
		s++;
		StringGrid1->Cells[2][55]="ВЕРНО";
	}
	else StringGrid1->Cells[2][55]="НЕВЕРНО";




	if (StringGrid1->Cells[2][60]=="вручишь") {
		s++;
		StringGrid1->Cells[2][61]="ВЕРНО";
	}
	else StringGrid1->Cells[2][61]="НЕВЕРНО";

	if (StringGrid1->Cells[2][66]=="принудить") {
		s++;
		StringGrid1->Cells[2][67]="ВЕРНО";
	}
	else StringGrid1->Cells[2][67]="НЕВЕРНО";

	if (StringGrid1->Cells[2][72]=="понявший") {
		s++;
		StringGrid1->Cells[2][73]="ВЕРНО";
	}
	else StringGrid1->Cells[2][73]="НЕВЕРНО";

	if (StringGrid1->Cells[2][78]=="понявший") {
		s++;
		StringGrid1->Cells[2][79]="ВЕРНО";
	}
	else StringGrid1->Cells[2][79]="НЕВЕРНО";

	if (StringGrid1->Cells[2][84]=="кремень") {
		s++;
		StringGrid1->Cells[2][85]="ВЕРНО";
	}
	else StringGrid1->Cells[2][85]="НЕВЕРНО";

	if (StringGrid1->Cells[2][90]=="отзыв") {
		s++;
		StringGrid1->Cells[2][91]="ВЕРНО";
	}
	else StringGrid1->Cells[2][91]="НЕВЕРНО";

	if (StringGrid1->Cells[2][96]=="принял") {
		s++;
		StringGrid1->Cells[2][97]="ВЕРНО";
	}
	else StringGrid1->Cells[2][97]="НЕВЕРНО";

	if (StringGrid1->Cells[2][102]=="намерение") {
		s++;
		StringGrid1->Cells[2][103]="ВЕРНО";
	}
	else StringGrid1->Cells[2][103]="НЕВЕРНО";

	if (StringGrid1->Cells[2][108]=="сливовый") {
		s++;
		StringGrid1->Cells[2][109]="ВЕРНО";
	}
	else StringGrid1->Cells[2][109]="НЕВЕРНО";

	if (StringGrid1->Cells[2][114]=="начатый") {
		s++;
		StringGrid1->Cells[2][115]="ВЕРНО";
	}
	else StringGrid1->Cells[2][115]="НЕВЕРНО";




	if (StringGrid1->Cells[2][120]=="125") {
		s++;
		StringGrid1->Cells[2][121]="ВЕРНО";
	}
	else StringGrid1->Cells[2][121]="НЕВЕРНО";

	if (StringGrid1->Cells[2][126]=="35") {
		s++;
		StringGrid1->Cells[2][127]="ВЕРНО";
	}
	else StringGrid1->Cells[2][127]="НЕВЕРНО";

	if (StringGrid1->Cells[2][132]=="24") {
		s++;
		StringGrid1->Cells[2][133]="ВЕРНО";
	}
	else StringGrid1->Cells[2][133]="НЕВЕРНО";

	if (StringGrid1->Cells[2][138]=="23") {
		s++;
		StringGrid1->Cells[2][139]="ВЕРНО";
	}
	else StringGrid1->Cells[2][139]="НЕВЕРНО";

	if (StringGrid1->Cells[2][144]=="14") {
		s++;
		StringGrid1->Cells[2][145]="ВЕРНО";
	}
	else StringGrid1->Cells[2][145]="НЕВЕРНО";

	if (StringGrid1->Cells[2][150]=="12") {
		s++;
		StringGrid1->Cells[2][151]="ВЕРНО";
	}
	else StringGrid1->Cells[2][151]="НЕВЕРНО";

	if (StringGrid1->Cells[2][156]=="35") {
		s++;
		StringGrid1->Cells[2][157]="ВЕРНО";
	}
	else StringGrid1->Cells[2][157]="НЕВЕРНО";

	if (StringGrid1->Cells[2][162]=="14") {
		s++;
		StringGrid1->Cells[2][163]="ВЕРНО";
	}
	else StringGrid1->Cells[2][163]="НЕВЕРНО";

	if (StringGrid1->Cells[2][168]=="14") {
		s++;
		StringGrid1->Cells[2][169]="ВЕРНО";
	}
	else StringGrid1->Cells[2][169]="НЕВЕРНО";

	if (StringGrid1->Cells[2][174]=="13") {
		s++;
		StringGrid1->Cells[2][175]="ВЕРНО";
	}
	else StringGrid1->Cells[2][175]="НЕВЕРНО";



	if (StringGrid1->Cells[2][180]=="15") {
		s++;
		StringGrid1->Cells[2][181]="ВЕРНО";
	}
	else StringGrid1->Cells[2][181]="НЕВЕРНО";

	if (StringGrid1->Cells[2][186]=="23") {
		s++;
		StringGrid1->Cells[2][187]="ВЕРНО";
	}
	else StringGrid1->Cells[2][187]="НЕВЕРНО";

	if (StringGrid1->Cells[2][192]=="135") {
		s++;
		StringGrid1->Cells[2][193]="ВЕРНО";
	}
	else StringGrid1->Cells[2][193]="НЕВЕРНО";

	if (StringGrid1->Cells[2][198]=="23") {
		s++;
		StringGrid1->Cells[2][199]="ВЕРНО";
	}
	else StringGrid1->Cells[2][199]="НЕВЕРНО";

	if (StringGrid1->Cells[2][204]=="25") {
		s++;
		StringGrid1->Cells[2][205]="ВЕРНО";
	}
	else StringGrid1->Cells[2][205]="НЕВЕРНО";

	if (StringGrid1->Cells[2][210]=="23") {
		s++;
		StringGrid1->Cells[2][211]="ВЕРНО";
	}
	else StringGrid1->Cells[2][211]="НЕВЕРНО";

	if (StringGrid1->Cells[2][216]=="13") {
		s++;
		StringGrid1->Cells[2][217]="ВЕРНО";
	}
	else StringGrid1->Cells[2][217]="НЕВЕРНО";

	if (StringGrid1->Cells[2][222]=="12") {
		s++;
		StringGrid1->Cells[2][223]="ВЕРНО";
	}
	else StringGrid1->Cells[2][223]="НЕВЕРНО";

	if (StringGrid1->Cells[2][228]=="14") {
		s++;
		StringGrid1->Cells[2][229]="ВЕРНО";
	}
	else StringGrid1->Cells[2][229]="НЕВЕРНО";

	if (StringGrid1->Cells[2][234]=="124") {
		s++;
		StringGrid1->Cells[2][235]="ВЕРНО";
	}
	else StringGrid1->Cells[2][235]="НЕВЕРНО";

	CheckLabel->Text=IntToStr(s);
}
//---------------------------------------------------------------------------

void __fastcall TAllTestForm::Button1Click(TObject *Sender)
{
	StringGrid1->Cells[2][4]="34";
	StringGrid1->Cells[2][10]="2345";
	StringGrid1->Cells[2][16]="123";
	StringGrid1->Cells[2][22]="15";
	StringGrid1->Cells[2][28]="25";
	StringGrid1->Cells[2][34]="23";
	StringGrid1->Cells[2][40]="134";
	StringGrid1->Cells[2][46]="15";
	StringGrid1->Cells[2][52]="435";
	StringGrid1->Cells[2][58]="23";

	StringGrid1->Cells[2][64]="вручишь";
	StringGrid1->Cells[2][70]="принудить";
	StringGrid1->Cells[2][76]="понявший";
	StringGrid1->Cells[2][82]="прирученный";
	StringGrid1->Cells[2][88]="кремень";
	StringGrid1->Cells[2][94]="отзыв";
	StringGrid1->Cells[2][100]="принял";
	StringGrid1->Cells[2][106]="намерение";
	StringGrid1->Cells[2][112]="сливовый";
	StringGrid1->Cells[2][118]="начатый";

	StringGrid1->Cells[2][124]="125";
	StringGrid1->Cells[2][130]="35";
	StringGrid1->Cells[2][136]="24";
	StringGrid1->Cells[2][142]="23";
	StringGrid1->Cells[2][148]="14";
	StringGrid1->Cells[2][154]="12";
	StringGrid1->Cells[2][160]="35";
	StringGrid1->Cells[2][166]="14";
	StringGrid1->Cells[2][172]="14";
	StringGrid1->Cells[2][178]="13";

	StringGrid1->Cells[2][184]="125";
	StringGrid1->Cells[2][190]="35";
	StringGrid1->Cells[2][196]="24";
	StringGrid1->Cells[2][202]="23";
	StringGrid1->Cells[2][208]="14";
	StringGrid1->Cells[2][214]="12";
	StringGrid1->Cells[2][220]="35";
	StringGrid1->Cells[2][226]="14";
	StringGrid1->Cells[2][232]="14";
	StringGrid1->Cells[2][238]="13";
}
//---------------------------------------------------------------------------

void __fastcall TAllTestForm::Timer1Timer(TObject *Sender)
{
	Label3->Text=IntToStr(StrToInt(Label3->Text)+1);

		if (StrToInt(Label3->Text)%60==0) {
			Label4->Text=IntToStr(StrToInt(Label4->Text)+1);
			Label3->Text="0";
		}

		if (StrToInt(Label4->Text==25)) {

		CheckLabel->Text="Время вышло \nНажмите проверить";
		Timer1->Enabled=false;
		StringColumn3->ReadOnly=true;
	}
}
//---------------------------------------------------------------------------
